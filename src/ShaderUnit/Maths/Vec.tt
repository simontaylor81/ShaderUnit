<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace ShaderUnit.Maths
{
<#
for(int size = 2; size <= 4; size++)
{
#>
	public struct Vec<#= size #><T>
	{
<# foreach (var component in Components(size))
	{
#>
		public T <#= component #>;
<#
	}
#>

		public Vec<#= size #>(<#= ComponentArgList(size) #>)
		{
<# foreach (var component in Components(size))
	{
#>
			this.<#= component #> = <#= component #>;
<#
	}
#>
		}
	}

<#
}
#>
}

<#+
private string ComponentName(int index)
{
	var components = new[] { "x", "y", "z", "w" };
	return components[index];
}

private IEnumerable<string> Components(int size)
{
	return Enumerable.Range(0, size)
		.Select(x => ComponentName(x));
}

private string ComponentArgList(int size)
{
	return string.Join(", ", Components(size).Select(x => "T " + x));
}
#>
